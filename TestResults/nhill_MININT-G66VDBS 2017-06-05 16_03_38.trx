<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="af52cb3e-44a2-4cc4-8110-84e3ab767bac" name="nhill@MININT-G66VDBS 2017-06-05 16:03:38" runUser="EUROPE\nhill" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="ae022676-7ff6-46af-981f-013ced444639">
    <Description>These are default test settings for a local test run.</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="nhill_MININT-G66VDBS 2017-06-05 16_03_38" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2017-06-05T16:03:38.7052613+01:00" queuing="2017-06-05T16:03:40.1109420+01:00" start="2017-06-05T16:03:40.3296759+01:00" finish="2017-06-05T16:03:54.4087568+01:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="1" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\nhill\documents\visual studio 2017\projects\vmss-demo\vmss-app-load\webtest1.webtest" id="3997c672-d9cb-4c4f-87fe-99f328b3d636" persistedWebTest="">
      <Execution id="b122e293-be91-41f9-b08c-2ed852555801" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="3997c672-d9cb-4c4f-87fe-99f328b3d636" executionId="b122e293-be91-41f9-b08c-2ed852555801" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="b122e293-be91-41f9-b08c-2ed852555801" testId="3997c672-d9cb-4c4f-87fe-99f328b3d636" testName="WebTest1" computerName="MININT-G66VDBS" duration="00:00:02.8633034" startTime="2017-06-05T16:03:40.4234241+01:00" endTime="2017-06-05T16:03:54.3308352+01:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b122e293-be91-41f9-b08c-2ed852555801">
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="ae022676-7ff6-46af-981f-013ced444639">
        <Description>These are default test settings for a local test run.</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="nhill_MININT-G66VDBS 2017-06-05 16_03_38" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>nhill_MININT-G66VDBS 2017-06-05 16_03_38\In\b122e293-be91-41f9-b08c-2ed852555801\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>